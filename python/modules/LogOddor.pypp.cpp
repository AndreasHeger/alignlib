// This file has been generated by Py++.

#include "boost/python.hpp"
#include "includes.h"
#include "iostream"
#include "cstdio"
#include "LogOddor.pypp.hpp"

namespace bp = boost::python;

void register_LogOddor_class(){

    { //::alignlib::LogOddor
        typedef bp::class_< alignlib::LogOddor, bp::bases< alignlib::AlignlibBase >, boost::noncopyable > LogOddor_exposer_t;
        LogOddor_exposer_t LogOddor_exposer = LogOddor_exposer_t( "LogOddor", bp::no_init );
        bp::scope LogOddor_scope( LogOddor_exposer );
        { //::alignlib::LogOddor::fillProfile
        
            typedef void ( ::alignlib::LogOddor::*fillProfile_function_type )( ::alignlib::ScoreMatrix &,::alignlib::FrequencyMatrix const &,::alignlib::HEncoder const & ) const;
            
            LogOddor_exposer.def( 
                "fillProfile"
                , fillProfile_function_type( &::alignlib::LogOddor::fillProfile )
                , ( bp::arg("scores"), bp::arg("frequencies"), bp::arg("translator") ) );
        
        }
        { //::alignlib::LogOddor::getClone
        
            typedef ::alignlib::HLogOddor ( ::alignlib::LogOddor::*getClone_function_type )(  ) const;
            
            LogOddor_exposer.def( 
                "getClone"
                , getClone_function_type( &::alignlib::LogOddor::getClone ) );
        
        }
        { //::alignlib::LogOddor::getNew
        
            typedef ::alignlib::HLogOddor ( ::alignlib::LogOddor::*getNew_function_type )(  ) const;
            
            LogOddor_exposer.def( 
                "getNew"
                , getNew_function_type( &::alignlib::LogOddor::getNew ) );
        
        }
        bp::register_ptr_to_python< boost::shared_ptr< alignlib::LogOddor > >();
        bp::implicitly_convertible< boost::shared_ptr< alignlib::LogOddor >, boost::shared_ptr< alignlib::AlignlibBase > >();
    }

}
