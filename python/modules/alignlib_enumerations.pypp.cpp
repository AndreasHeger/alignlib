// This file has been generated by Py++.

#include "boost/python.hpp"
#include "includes.h"
#include "iostream"
#include "cstdio"
#include "alignlib_enumerations.pypp.hpp"

namespace bp = boost::python;

void register_enumerations(){

    bp::enum_< alignlib::AggregateType>("AggregateType")
        .value("AggMin", alignlib::AggMin)
        .value("AggMax", alignlib::AggMax)
        .value("AggSum", alignlib::AggSum)
        .value("AggMean", alignlib::AggMean)
        .value("AggCount", alignlib::AggCount)
        .export_values()
        ;

    bp::enum_< alignlib::AlignmentType>("AlignmentType")
        .value("ALIGNMENT_LOCAL", alignlib::ALIGNMENT_LOCAL)
        .value("ALIGNMENT_WRAP", alignlib::ALIGNMENT_WRAP)
        .value("ALIGNMENT_GLOBAL", alignlib::ALIGNMENT_GLOBAL)
        .export_values()
        ;

    bp::enum_< alignlib::AlphabetType>("AlphabetType")
        .value("User", alignlib::User)
        .value("Protein20", alignlib::Protein20)
        .value("Protein23", alignlib::Protein23)
        .value("DNA4", alignlib::DNA4)
        .export_values()
        ;

    bp::enum_< alignlib::CombinationMode>("CombinationMode")
        .value("RR", alignlib::RR)
        .value("RC", alignlib::RC)
        .value("CR", alignlib::CR)
        .value("CC", alignlib::CC)
        .export_values()
        ;

    bp::enum_< alignlib::LinkageType>("LinkageType")
        .value("SINGLE_LINKAGE", alignlib::SINGLE_LINKAGE)
        .value("COMPLETE_LINKAGE", alignlib::COMPLETE_LINKAGE)
        .value("AVERAGE_LINKAGE", alignlib::AVERAGE_LINKAGE)
        .value("UPGMA", alignlib::UPGMA)
        .value("WPGMA", alignlib::WPGMA)
        .value("UPGMC", alignlib::UPGMC)
        .value("WPGMC", alignlib::WPGMC)
        .export_values()
        ;

    bp::enum_< alignlib::SearchType>("SearchType")
        .value("NO_SEARCH", alignlib::NO_SEARCH)
        .value("LEFT", alignlib::LEFT)
        .value("RIGHT", alignlib::RIGHT)
        .export_values()
        ;

    bp::enum_< alignlib::StorageType>("StorageType")
        .value("Full", alignlib::Full)
        .value("Sparse", alignlib::Sparse)
        .export_values()
        ;

    bp::enum_< alignlib::ToolkitType>("ToolkitType")
        .value("ProteinAlignment", alignlib::ProteinAlignment)
        .value("DNAAlignment", alignlib::DNAAlignment)
        .value("Genomics", alignlib::Genomics)
        .export_values()
        ;

}
