// This file has been generated by Py++.

#include "boost/python.hpp"
#include "includes.h"
#include "iostream"
#include "cstdio"
#include "Toolkit.pypp.hpp"

namespace bp = boost::python;

void register_Toolkit_class(){

    { //::alignlib::Toolkit
        typedef bp::class_< alignlib::Toolkit, boost::noncopyable > Toolkit_exposer_t;
        Toolkit_exposer_t Toolkit_exposer = Toolkit_exposer_t( "Toolkit", bp::no_init );
        bp::scope Toolkit_scope( Toolkit_exposer );
        { //::alignlib::Toolkit::getAlignator
        
            typedef ::alignlib::HAlignator ( ::alignlib::Toolkit::*getAlignator_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getAlignator"
                , getAlignator_function_type( &::alignlib::Toolkit::getAlignator ) );
        
        }
        { //::alignlib::Toolkit::getAlignment
        
            typedef ::alignlib::HAlignment ( ::alignlib::Toolkit::*getAlignment_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getAlignment"
                , getAlignment_function_type( &::alignlib::Toolkit::getAlignment ) );
        
        }
        { //::alignlib::Toolkit::getClone
        
            typedef ::alignlib::HToolkit ( ::alignlib::Toolkit::*getClone_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getClone"
                , getClone_function_type( &::alignlib::Toolkit::getClone ) );
        
        }
        { //::alignlib::Toolkit::getDistor
        
            typedef ::alignlib::HDistor ( ::alignlib::Toolkit::*getDistor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getDistor"
                , getDistor_function_type( &::alignlib::Toolkit::getDistor ) );
        
        }
        { //::alignlib::Toolkit::getEncoder
        
            typedef ::alignlib::HEncoder ( ::alignlib::Toolkit::*getEncoder_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getEncoder"
                , getEncoder_function_type( &::alignlib::Toolkit::getEncoder ) );
        
        }
        { //::alignlib::Toolkit::getFragmentor
        
            typedef ::alignlib::HFragmentor ( ::alignlib::Toolkit::*getFragmentor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getFragmentor"
                , getFragmentor_function_type( &::alignlib::Toolkit::getFragmentor ) );
        
        }
        { //::alignlib::Toolkit::getIterator2D
        
            typedef ::alignlib::HIterator2D ( ::alignlib::Toolkit::*getIterator2D_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getIterator2D"
                , getIterator2D_function_type( &::alignlib::Toolkit::getIterator2D ) );
        
        }
        { //::alignlib::Toolkit::getLogOddor
        
            typedef ::alignlib::HLogOddor ( ::alignlib::Toolkit::*getLogOddor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getLogOddor"
                , getLogOddor_function_type( &::alignlib::Toolkit::getLogOddor ) );
        
        }
        { //::alignlib::Toolkit::getMultAlignment
        
            typedef ::alignlib::HMultAlignment ( ::alignlib::Toolkit::*getMultAlignment_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getMultAlignment"
                , getMultAlignment_function_type( &::alignlib::Toolkit::getMultAlignment ) );
        
        }
        { //::alignlib::Toolkit::getMultipleAlignator
        
            typedef ::alignlib::HMultipleAlignator ( ::alignlib::Toolkit::*getMultipleAlignator_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getMultipleAlignator"
                , getMultipleAlignator_function_type( &::alignlib::Toolkit::getMultipleAlignator ) );
        
        }
        { //::alignlib::Toolkit::getNew
        
            typedef ::alignlib::HToolkit ( ::alignlib::Toolkit::*getNew_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getNew"
                , getNew_function_type( &::alignlib::Toolkit::getNew ) );
        
        }
        { //::alignlib::Toolkit::getRegularizor
        
            typedef ::alignlib::HRegularizor ( ::alignlib::Toolkit::*getRegularizor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getRegularizor"
                , getRegularizor_function_type( &::alignlib::Toolkit::getRegularizor ) );
        
        }
        { //::alignlib::Toolkit::getScorer
        
            typedef ::alignlib::HScorer ( ::alignlib::Toolkit::*getScorer_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getScorer"
                , getScorer_function_type( &::alignlib::Toolkit::getScorer ) );
        
        }
        { //::alignlib::Toolkit::getSubstitutionMatrix
        
            typedef ::alignlib::HSubstitutionMatrix ( ::alignlib::Toolkit::*getSubstitutionMatrix_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getSubstitutionMatrix"
                , getSubstitutionMatrix_function_type( &::alignlib::Toolkit::getSubstitutionMatrix ) );
        
        }
        { //::alignlib::Toolkit::getTreetor
        
            typedef ::alignlib::HTreetor ( ::alignlib::Toolkit::*getTreetor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getTreetor"
                , getTreetor_function_type( &::alignlib::Toolkit::getTreetor ) );
        
        }
        { //::alignlib::Toolkit::getWeightor
        
            typedef ::alignlib::HWeightor ( ::alignlib::Toolkit::*getWeightor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "getWeightor"
                , getWeightor_function_type( &::alignlib::Toolkit::getWeightor ) );
        
        }
        { //::alignlib::Toolkit::makeAlignator
        
            typedef ::alignlib::HAlignator ( ::alignlib::Toolkit::*makeAlignator_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeAlignator"
                , makeAlignator_function_type( &::alignlib::Toolkit::makeAlignator ) );
        
        }
        { //::alignlib::Toolkit::makeAlignment
        
            typedef ::alignlib::HAlignment ( ::alignlib::Toolkit::*makeAlignment_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeAlignment"
                , makeAlignment_function_type( &::alignlib::Toolkit::makeAlignment ) );
        
        }
        { //::alignlib::Toolkit::makeDistor
        
            typedef ::alignlib::HDistor ( ::alignlib::Toolkit::*makeDistor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeDistor"
                , makeDistor_function_type( &::alignlib::Toolkit::makeDistor ) );
        
        }
        { //::alignlib::Toolkit::makeEncoder
        
            typedef ::alignlib::HEncoder ( ::alignlib::Toolkit::*makeEncoder_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeEncoder"
                , makeEncoder_function_type( &::alignlib::Toolkit::makeEncoder ) );
        
        }
        { //::alignlib::Toolkit::makeFragmentor
        
            typedef ::alignlib::HFragmentor ( ::alignlib::Toolkit::*makeFragmentor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeFragmentor"
                , makeFragmentor_function_type( &::alignlib::Toolkit::makeFragmentor ) );
        
        }
        { //::alignlib::Toolkit::makeIterator2D
        
            typedef ::alignlib::HIterator2D ( ::alignlib::Toolkit::*makeIterator2D_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeIterator2D"
                , makeIterator2D_function_type( &::alignlib::Toolkit::makeIterator2D ) );
        
        }
        { //::alignlib::Toolkit::makeLogOddor
        
            typedef ::alignlib::HLogOddor ( ::alignlib::Toolkit::*makeLogOddor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeLogOddor"
                , makeLogOddor_function_type( &::alignlib::Toolkit::makeLogOddor ) );
        
        }
        { //::alignlib::Toolkit::makeMultAlignment
        
            typedef ::alignlib::HMultAlignment ( ::alignlib::Toolkit::*makeMultAlignment_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeMultAlignment"
                , makeMultAlignment_function_type( &::alignlib::Toolkit::makeMultAlignment ) );
        
        }
        { //::alignlib::Toolkit::makeMultipleAlignator
        
            typedef ::alignlib::HMultipleAlignator ( ::alignlib::Toolkit::*makeMultipleAlignator_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeMultipleAlignator"
                , makeMultipleAlignator_function_type( &::alignlib::Toolkit::makeMultipleAlignator ) );
        
        }
        { //::alignlib::Toolkit::makeRegularizor
        
            typedef ::alignlib::HRegularizor ( ::alignlib::Toolkit::*makeRegularizor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeRegularizor"
                , makeRegularizor_function_type( &::alignlib::Toolkit::makeRegularizor ) );
        
        }
        { //::alignlib::Toolkit::makeScorer
        
            typedef ::alignlib::HScorer ( ::alignlib::Toolkit::*makeScorer_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeScorer"
                , makeScorer_function_type( &::alignlib::Toolkit::makeScorer ) );
        
        }
        { //::alignlib::Toolkit::makeSubstitutionMatrix
        
            typedef ::alignlib::HSubstitutionMatrix ( ::alignlib::Toolkit::*makeSubstitutionMatrix_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeSubstitutionMatrix"
                , makeSubstitutionMatrix_function_type( &::alignlib::Toolkit::makeSubstitutionMatrix ) );
        
        }
        { //::alignlib::Toolkit::makeTreetor
        
            typedef ::alignlib::HTreetor ( ::alignlib::Toolkit::*makeTreetor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeTreetor"
                , makeTreetor_function_type( &::alignlib::Toolkit::makeTreetor ) );
        
        }
        { //::alignlib::Toolkit::makeWeightor
        
            typedef ::alignlib::HWeightor ( ::alignlib::Toolkit::*makeWeightor_function_type )(  ) const;
            
            Toolkit_exposer.def( 
                "makeWeightor"
                , makeWeightor_function_type( &::alignlib::Toolkit::makeWeightor ) );
        
        }
        { //::alignlib::Toolkit::setAlignator
        
            typedef void ( ::alignlib::Toolkit::*setAlignator_function_type )( ::alignlib::HAlignator const & ) ;
            
            Toolkit_exposer.def( 
                "setAlignator"
                , setAlignator_function_type( &::alignlib::Toolkit::setAlignator )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setAlignment
        
            typedef void ( ::alignlib::Toolkit::*setAlignment_function_type )( ::alignlib::HAlignment const & ) ;
            
            Toolkit_exposer.def( 
                "setAlignment"
                , setAlignment_function_type( &::alignlib::Toolkit::setAlignment )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setDistor
        
            typedef void ( ::alignlib::Toolkit::*setDistor_function_type )( ::alignlib::HDistor const & ) ;
            
            Toolkit_exposer.def( 
                "setDistor"
                , setDistor_function_type( &::alignlib::Toolkit::setDistor )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setEncoder
        
            typedef void ( ::alignlib::Toolkit::*setEncoder_function_type )( ::alignlib::HEncoder const & ) ;
            
            Toolkit_exposer.def( 
                "setEncoder"
                , setEncoder_function_type( &::alignlib::Toolkit::setEncoder )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setFragmentor
        
            typedef void ( ::alignlib::Toolkit::*setFragmentor_function_type )( ::alignlib::HFragmentor const & ) ;
            
            Toolkit_exposer.def( 
                "setFragmentor"
                , setFragmentor_function_type( &::alignlib::Toolkit::setFragmentor )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setIterator2D
        
            typedef void ( ::alignlib::Toolkit::*setIterator2D_function_type )( ::alignlib::HIterator2D const & ) ;
            
            Toolkit_exposer.def( 
                "setIterator2D"
                , setIterator2D_function_type( &::alignlib::Toolkit::setIterator2D )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setLogOddor
        
            typedef void ( ::alignlib::Toolkit::*setLogOddor_function_type )( ::alignlib::HLogOddor const & ) ;
            
            Toolkit_exposer.def( 
                "setLogOddor"
                , setLogOddor_function_type( &::alignlib::Toolkit::setLogOddor )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setMultAlignment
        
            typedef void ( ::alignlib::Toolkit::*setMultAlignment_function_type )( ::alignlib::HMultAlignment const & ) ;
            
            Toolkit_exposer.def( 
                "setMultAlignment"
                , setMultAlignment_function_type( &::alignlib::Toolkit::setMultAlignment )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setMultipleAlignator
        
            typedef void ( ::alignlib::Toolkit::*setMultipleAlignator_function_type )( ::alignlib::HMultipleAlignator const & ) ;
            
            Toolkit_exposer.def( 
                "setMultipleAlignator"
                , setMultipleAlignator_function_type( &::alignlib::Toolkit::setMultipleAlignator )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setRegularizor
        
            typedef void ( ::alignlib::Toolkit::*setRegularizor_function_type )( ::alignlib::HRegularizor const & ) ;
            
            Toolkit_exposer.def( 
                "setRegularizor"
                , setRegularizor_function_type( &::alignlib::Toolkit::setRegularizor )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setScorer
        
            typedef void ( ::alignlib::Toolkit::*setScorer_function_type )( ::alignlib::HScorer const & ) ;
            
            Toolkit_exposer.def( 
                "setScorer"
                , setScorer_function_type( &::alignlib::Toolkit::setScorer )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setSubstitutionMatrix
        
            typedef void ( ::alignlib::Toolkit::*setSubstitutionMatrix_function_type )( ::alignlib::HSubstitutionMatrix const & ) ;
            
            Toolkit_exposer.def( 
                "setSubstitutionMatrix"
                , setSubstitutionMatrix_function_type( &::alignlib::Toolkit::setSubstitutionMatrix )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setTreetor
        
            typedef void ( ::alignlib::Toolkit::*setTreetor_function_type )( ::alignlib::HTreetor const & ) ;
            
            Toolkit_exposer.def( 
                "setTreetor"
                , setTreetor_function_type( &::alignlib::Toolkit::setTreetor )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::setWeightor
        
            typedef void ( ::alignlib::Toolkit::*setWeightor_function_type )( ::alignlib::HWeightor const & ) ;
            
            Toolkit_exposer.def( 
                "setWeightor"
                , setWeightor_function_type( &::alignlib::Toolkit::setWeightor )
                , ( bp::arg("arg0") ) );
        
        }
        { //::alignlib::Toolkit::write
        
            typedef void ( ::alignlib::Toolkit::*write_function_type )( ::std::ostream & ) const;
            
            Toolkit_exposer.def( 
                "write"
                , write_function_type( &::alignlib::Toolkit::write )
                , ( bp::arg("output") ) );
        
        }
        Toolkit_exposer.def( bp::self_ns::str( bp::self ) );
        bp::register_ptr_to_python< boost::shared_ptr< alignlib::Toolkit > >();
    }

}
