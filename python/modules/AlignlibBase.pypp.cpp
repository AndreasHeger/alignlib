// This file has been generated by Py++.

#include "boost/python.hpp"
#include "includes.h"
#include "iostream"
#include "cstdio"
#include "AlignlibBase.pypp.hpp"

namespace bp = boost::python;

void register_AlignlibBase_class(){

    { //::alignlib::AlignlibBase
        typedef bp::class_< alignlib::AlignlibBase, boost::noncopyable > AlignlibBase_exposer_t;
        AlignlibBase_exposer_t AlignlibBase_exposer = AlignlibBase_exposer_t( "AlignlibBase", bp::no_init );
        bp::scope AlignlibBase_scope( AlignlibBase_exposer );
        { //::alignlib::AlignlibBase::cloneToolkit
        
            typedef void ( ::alignlib::AlignlibBase::*cloneToolkit_function_type )(  ) ;
            
            AlignlibBase_exposer.def( 
                "cloneToolkit"
                , cloneToolkit_function_type( &::alignlib::AlignlibBase::cloneToolkit ) );
        
        }
        { //::alignlib::AlignlibBase::getToolkit
        
            typedef ::alignlib::HToolkit ( ::alignlib::AlignlibBase::*getToolkit_function_type )(  ) const;
            
            AlignlibBase_exposer.def( 
                "getToolkit"
                , getToolkit_function_type( &::alignlib::AlignlibBase::getToolkit ) );
        
        }
        { //::alignlib::AlignlibBase::setToolkit
        
            typedef void ( ::alignlib::AlignlibBase::*setToolkit_function_type )( ::alignlib::HToolkit const & ) ;
            
            AlignlibBase_exposer.def( 
                "setToolkit"
                , setToolkit_function_type( &::alignlib::AlignlibBase::setToolkit )
                , ( bp::arg("toolkit") ) );
        
        }
    }

}
